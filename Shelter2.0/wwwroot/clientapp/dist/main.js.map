{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/advert/advertList.component.html","webpack:///./app/advert/advertList.component.ts","webpack:///./app/app.component.html","webpack:///./app/app.component.ts","webpack:///./app/app.module.ts","webpack:///./app/shared/dataService.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,mGAAmG,WAAW,IAAI,sBAAsB,sDAAsD,WAAW,6B;;;;;;;;;;;;;;;;;;ACAtJ;AACC;AASpD;IAEI,oBAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QAK9B,YAAO,GAAG,EAAE,CAAC;IAHpB,CAAC;IAKD,6BAAQ,GAAR;QACI,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;QACpB,yBAAyB;QACzB,oBAAoB;QACpB,2CAA2C;QAC3C,OAAO;QACP,KAAK;IACb,CAAC;IAhBQ,UAAU;QALtB,+DAAS,CAAC;YACP,QAAQ,EAAE,aAAa;YACvB,0GAAwC;SAE3C,CAAC;+EAG4B,+DAAW;OAF5B,UAAU,CAiBtB;IAAD,iBAAC;CAAA;AAjBsB;;;;;;;;;;;;ACVvB,0EAA0E,OAAO,wG;;;;;;;;;;;;;;;;;ACAvC;AAO1C;IALA;QAME,UAAK,GAAG,YAAY,CAAC;IACvB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACP,QAAQ,EAAE,aAAa;YACzB,qFAAmC;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEM;AACY;AACR;AACK;AAgBxD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAdrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACV,2DAAY;gBACZ,uEAAU;aACb;YACD,OAAO,EAAE;gBACL,uEAAa;gBACb,qEAAgB;aACnB;YACD,SAAS,EAAE;gBACL,+DAAW;aAChB;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;ACtBrB,uDAAuD;AACN;AACP;AACN;AAIrC;IAEI,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAG7B,YAAO,GAAG,EAAE,CAAC;IAFpB,CAAC;IAID,kCAAY,GAAZ;QAAA,iBASC;QARG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC;aACxB,IAAI,CACL,0DAAG,CAAC,UAAC,IAAW;YACZ,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;IAGX,CAAC;IAhBQ,WAAW;QADvB,gEAAU,EAAE;+EAGiB,+DAAU;OAF3B,WAAW,CAiBvB;IAAD,kBAAC;CAAA;AAjBuB;;;;;;;;;;;;;ACPxB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"row\\\">\\r\\n    <ul>\\r\\n        <!--<li *ngFor=\\\"let a of adverts\\\">{{ a.title }}: {{ a.shortDescription }}</li>-->\\r\\n        <li *ngFor=\\\"let a of adverts\\\">{{ a.title }}</li>\\r\\n    </ul>\\r\\n</div>\"","﻿import { Component, OnInit } from \"@angular/core\";\r\nimport { DataService } from '../shared/dataService';\r\n\r\n\r\n\r\n@Component({\r\n    selector: \"advert-list\",\r\n    templateUrl: \"advertList.component.html\",\r\n    styleUrls: []\r\n})\r\nexport class AdvertList implements OnInit {\r\n\r\n    constructor(private data: DataService) {\r\n        \r\n    }\r\n\r\n\r\n    public adverts = [];\r\n\r\n    ngOnInit(): void {\r\n        this.data.loadAdrverts()\r\n            //.subscribe(success => {\r\n            //    if (success) {\r\n            //        this.adverts = this.data.adverts;\r\n            //    }\r\n            //});\r\n    }\r\n}","module.exports = \"<div class=\\\"row\\\">\\r\\n    <h1>\\r\\n        Welcome to {{title}}!\\r\\n        <advert-list></advert-list>\\r\\n    </h1>\\r\\n    <h1>\\r\\n        Hi\\r\\n    </h1>\\r\\n</div> \"","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'the-shelter',\n  templateUrl: \"./app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n  title = 'Shelter2.0';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AdvertList } from './advert/advertList.component';\nimport { DataService } from './shared/dataService';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\n@NgModule({\n  declarations: [\n      AppComponent,\n      AdvertList\n  ],\n  imports: [\n      BrowserModule,\n      HttpClientModule\n  ],\n  providers: [\n        DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","﻿//import { HttpClient } from 'selenium-webdriver/http';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    public adverts = [];\r\n\r\n    loadAdrverts() {\r\n        this.http.get(\"/Advert/List\")\r\n            .pipe(\r\n            map((data: any[]) => {\r\n                this.adverts = data;\r\n                return true;\r\n            }))\r\n            \r\n            \r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}